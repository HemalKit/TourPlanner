// <auto-generated />
using System;
using TourPlanner.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace TourPlanner.Migrations
{
    [DbContext(typeof(TourGuideContext))]
    [Migration("20190219132258_RouteAdded")]
    partial class RouteAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AngularDemo3.Models.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("Latitude");

                    b.Property<float>("Longitude");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("AngularDemo3.Models.Route", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Cost");

                    b.Property<Guid?>("EndPointId");

                    b.Property<int>("Mode");

                    b.Property<Guid?>("StartingPointId");

                    b.HasKey("Id");

                    b.HasIndex("EndPointId");

                    b.HasIndex("StartingPointId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("AngularDemo3.Models.Tourist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.ToTable("Tourists");
                });

            modelBuilder.Entity("AngularDemo3.Models.Route", b =>
                {
                    b.HasOne("AngularDemo3.Models.City", "EndPoint")
                        .WithMany()
                        .HasForeignKey("EndPointId");

                    b.HasOne("AngularDemo3.Models.City", "StartingPoint")
                        .WithMany()
                        .HasForeignKey("StartingPointId");
                });
#pragma warning restore 612, 618
        }
    }
}
